"""Script to extract font metrics from .afm files.

Usage: `python parse_afm.py <path/to/afm-file.afm>`
"""
from __future__ import annotations

import sys

from fontTools.afmLib import AFM


def print_widths() -> None:
    f = AFM(sys.argv[1])
    widths = {
        ord(char.strip() or char): f[name][1] for name, char in NAMES.items()
    }
    for k, v in sorted(widths.items()):
        print(f"{k}: {v},")


def print_kern() -> None:
    f = AFM(sys.argv[1])
    kern = {
        (NAMES[a], NAMES[b]): value
        for (a, b), value in f._kerning.items()
        # Ignore characters we can't encode cp1252 anyway
        if a in NAMES and b in NAMES
    }
    for k, v in sorted(kern.items()):
        print(f"{k}: {v},")


NAMES = {
    "A": "A",
    "AE": "Æ",
    "Aacute": "Á",
    "Acircumflex": "Â",
    "Adieresis": "Ä",
    "Agrave": "À",
    "Aring": "Å",
    "Atilde": "Ã",
    "B": "B",
    "C": "C",
    "Ccedilla": "Ç",
    "D": "D",
    "E": "E",
    "Eacute": "É",
    "Ecircumflex": "Ê",
    "Edieresis": "Ë",
    "Egrave": "È",
    "Eth": "Ð",
    "Euro": "€",
    "F": "F",
    "G": "G",
    "H": "H",
    "I": "I",
    "Iacute": "Í",
    "Icircumflex": "Î",
    "Idieresis": "Ï",
    "Igrave": "Ì",
    "J": "J",
    "K": "K",
    "L": "L",
    "Lslash": "Ł",
    "M": "M",
    "N": "N",
    "Ntilde": "Ñ",
    "O": "O",
    "OE": "Œ",
    "Oacute": "Ó",
    "Ocircumflex": "Ô",
    "Odieresis": "Ö",
    "Ograve": "Ò",
    "Oslash": "Ø",
    "Otilde": "Õ",
    "P": "P",
    "Q": "Q",
    "R": "R",
    "S": "S",
    "Scaron": "Š",
    "T": "T",
    "Thorn": "Þ",
    "U": "U",
    "Uacute": "Ú",
    "Ucircumflex": "Û",
    "Udieresis": "Ü",
    "Ugrave": "Ù",
    "V": "V",
    "W": "W",
    "X": "X",
    "Y": "Y",
    "Yacute": "Ý",
    "Ydieresis": "Ÿ",
    "Z": "Z",
    "Zcaron": "Ž",
    "a": "a",
    "aacute": "á",
    "acircumflex": "â",
    "acute": " ́",
    "adieresis": "ä",
    "ae": "æ",
    "agrave": "à",
    "ampersand": "&",
    "aring": "å",
    "asciicircum": "^",
    "asciitilde": "~",
    "asterisk": "*",
    "at": "@",
    "atilde": "ã",
    "b": "b",
    "backslash": "\\",
    "bar": "|",
    "braceleft": "{",
    "braceright": "}",
    "bracketleft": "[",
    "bracketright": "]",
    "breve": " ̆",
    "brokenbar": "¦",
    "bullet": "•",
    "c": "c",
    "caron": "ˇ",
    "ccedilla": "ç",
    "cedilla": " ̧",
    "cent": "¢",
    "circumflex": "ˆ",
    "colon": ":",
    "comma": ",",
    "copyright": "©",
    "currency": "¤",
    "d": "d",
    "dagger": "†",
    "daggerdbl": "‡",
    "degree": "°",
    "dieresis": " ̈",
    "divide": "÷",
    "dollar": "$",
    "dotaccent": " ̇",
    "dotlessi": "ı",
    "e": "e",
    "eacute": "é",
    "ecircumflex": "ê",
    "edieresis": "ë",
    "egrave": "è",
    "eight": "8",
    "ellipsis": "…",
    "emdash": "—",
    "endash": "–",
    "equal": "=",
    "eth": "ð",
    "exclam": "!",
    "exclamdown": "¡",
    "f": "f",
    "fi": "ﬁ",
    "five": "5",
    "fl": "ﬂ",
    "florin": "ƒ",
    "four": "4",
    "fraction": "⁄",
    "g": "g",
    "germandbls": "ß",
    "grave": "`",
    "greater": ">",
    "guillemotleft": "«",
    "guillemotright": "»",
    "guilsinglleft": "‹",
    "guilsinglright": "›",
    "h": "h",
    "hungarumlaut": " ̋",
    "hyphen": "-",
    "i": "i",
    "iacute": "í",
    "icircumflex": "î",
    "idieresis": "ï",
    "igrave": "ì",
    "j": "j",
    "k": "k",
    "l": "l",
    "less": "<",
    "logicalnot": "¬",
    "lslash": "ł",
    "m": "m",
    "macron": " ̄",
    "minus": "−",
    "mu": "μ",
    "multiply": "×",
    "n": "n",
    "nine": "9",
    "ntilde": "ñ",
    "numbersign": "#",
    "o": "o",
    "oacute": "ó",
    "ocircumflex": "ô",
    "odieresis": "ö",
    "oe": "œ",
    "ogonek": " ̨",
    "ograve": "ò",
    "one": "1",
    "onehalf": "½",
    "onequarter": "¼",
    "onesuperior": "¹",
    "ordfeminine": "ª",
    "ordmasculine": "º",
    "oslash": "ø",
    "otilde": "õ",
    "p": "p",
    "paragraph": "¶",
    "parenleft": "(",
    "parenright": ")",
    "percent": "%",
    "period": ".",
    "periodcentered": "·",
    "perthousand": "‰",
    "plus": "+",
    "plusminus": "±",
    "q": "q",
    "question": "?",
    "questiondown": "¿",
    "quotedbl": '"',
    "quotedblbase": "„",
    "quotedblleft": "“",
    "quotedblright": "”",
    "quoteleft": "‘",
    "quoteright": "’",
    "quotesinglbase": "‚",
    "quotesingle": "'",
    "r": "r",
    "registered": "®",
    "ring": " ̊",
    "s": "s",
    "scaron": "š",
    "section": "§",
    "semicolon": ";",
    "seven": "7",
    "six": "6",
    "slash": "/",
    "space": " ",
    "sterling": "£",
    "t": "t",
    "thorn": "þ",
    "three": "3",
    "threequarters": "¾",
    "threesuperior": "³",
    "tilde": " ̃",
    "trademark": "™",
    "two": "2",
    "twosuperior": "²",
    "u": "u",
    "uacute": "ú",
    "ucircumflex": "û",
    "udieresis": "ü",
    "ugrave": "ù",
    "underscore": "_",
    "v": "v",
    "w": "w",
    "x": "x",
    "y": "y",
    "yacute": "ý",
    "ydieresis": "ÿ",
    "yen": "¥",
    "z": "z",
    "zcaron": "ž",
    "zero": "0",
}

ZAPF_NAMES = {}


# sanity checks
assert len(set(NAMES.values())) == len(NAMES)
# for char in NAMES.values():
#     char.encode("cp1252")


if __name__ == "__main__":
    # print_widths()
    print_kern()
